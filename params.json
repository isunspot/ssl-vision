{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Fork of RoboCup Small Size League Shared Vision System","google":"","body":"> This software is free: you can redistribute it and/or modify\r\n> it under the terms of the GNU General Public License Version 3,\r\n> as published by the Free Software Foundation.\r\n> \r\n> This software is distributed in the hope that it will be useful,\r\n> but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n> GNU General Public License for more details.\r\n> \r\n> You should have received a copy of the GNU General Public License\r\n> Version 3 in the file COPYING that came with this distribution.\r\n> If not, see &lt;<http://www.gnu.org/licenses/>&gt;.\r\n\r\n[ssl-vision](http://github.com/roboime/ssl-vision/)\r\n===================================================\r\n\r\nRoboCup Small Size League Shared Vision System\r\n----------------------------------------------\r\n\r\nThis is a fork which intends to add compatibility for Windows, and\r\npossibly Mac OSX. The official repo is available [here](http://code.google.com/p/ssl-vision/).\r\n\r\n\r\nOnline Documentation\r\n--------------------\r\n\r\nTo find more in-depth and up-to-date information about SSL-Vision\r\n(including installation and configuration), please visit the [Wiki\r\nDocumentation Page](http://code.google.com/p/ssl-vision/wiki/Manual).\r\n \r\n\r\nSoftware Requirements\r\n---------------------\r\n\r\n- cmake >= 2.8\r\n- g++, clang++ or vc++\r\n- QT >= 4.8 with opengl and networking support\r\n- Eigen2 or Eigen3\r\n- Google protocol buffers (protoc)\r\n- OpenGL\r\n- GLU\r\n- libdc1394 >= 2.0 for using IEEE1394 camera, currently only works on linux\r\n- libjpeg\r\n- libpng\r\n\r\nTo get all of these packages in ubuntu/debian variants, run:\r\n\r\n``sudo apt-get install g++ libqt4-dev libeigen2-dev protobuf-compiler libprotobuf-dev libdc1394-22 libdc1394-22-dev cmake``\r\n\r\nFor gentoo users the following should suffice:\r\n\r\n``sudo emerge cmake qt-core qt-gui qt-opengl eigen protobuf opengl libdc1394``\r\n\r\n\r\nHardware Requirements\r\n---------------------\r\n\r\nThe system supports 1394B / Firewire 800, but it's also backward compatible\r\nwith 1394A.\r\nThough it's not mandatory and the software can be compiled without support\r\nfor camera.\r\n\r\n\r\nCompilation\r\n-----------\r\n\r\nOn linux or Mac, build the code by running:\r\n\r\n``make``\r\n\r\nThe project *should* build without errors or warnings.\r\n\r\nAlternativley on any system:\r\n\r\n```\r\ncd build\r\ncmake .. -i #for interactive mode\r\n```\r\n\r\nOn Windows it's possible to use:\r\n\r\n``make_vcproj``\r\n\r\nthat script will call cmake-gui.\r\n\r\nAlso on Mac and Windows one can also use cmake-gui directly, choosing\r\nthe project root as the source directory, and build folder as\r\nbuild directory.\r\n\r\n\r\nRunning\r\n-------\r\n\r\n1. Depending on your OS, you might need to ensure that you have\r\n   full access to the firewire devices /dev/fw* This **might**\r\n   require logging in as root.\r\n\r\n2. Run the software using the following command:\r\n\r\n   ```\r\n   cd bin\r\n   ./vision\r\n   ```\r\n\r\n   Note that it's better to go to the ./bin dir first since some .xml's\r\n   will be generated and for organization sake they shouldn't be on\r\n   the root of the project not to mix with the source nor build system.\r\n\r\n   Alternatively open it from your file manager, this works for all OS's,\r\n   though on linux you won't see the stdout this way.\r\n\r\n\r\nStarting to Capture and Setting Parameters\r\n------------------------------------------\r\n\r\nOnce the software is running, you should see two empty capture frames\r\non the right, and a data-tree structure on the left.\r\n\r\nIn this data-structure you can setup your camera parameters,\r\nsuch as resolution, capture mode, etc.\r\n\r\nA quick hint: the text-field below the data-tree allows for\r\nfast search through the data-tree.\r\n\r\nSee the section of DC1394 parameters below to get an idea of what the\r\nparameters do.\r\n\r\nOnce you have them set up, you can start capturing by clicking\r\n\"Image Capture/Capture Control/Start\"\r\nin the data-tree.\r\n\r\n\r\nDC1394 Parameters\r\n-----------------\r\n\r\nIf you expand the tree then the capture parameters are in\r\n\"Image Capture/DC1394/Capture Settings\"\r\n   \r\nFurthermore, conversion settings are in\r\n\"Image Capture/DC1394/Conversion Settings\"\r\n\r\n\"convert to mode\" should currently be \"yuv422\"\r\n\r\nfor best performance, \"capture mode\" should also be \"yuv422\",\r\nbut can also be a different format such as \"yuv411\" or \"rgb\"\r\n\r\nAlternatively, if you desire, you can do de-bayering in software,\r\nbut this will take extra CPU cycles. To do so, you would set the\r\ncapture mode to e.g. \"raw8\" and the convert mode to \"rgb\". Finally,\r\nyou will need to set \"de-bayer\" to true, and select the correct\r\nde-bayer pattern and desired method.\r\n\r\nCapturing supports both DCAM native modes and Format7 modes.\r\nThis is selected in the \"capture format\" field. Leaving it on\r\n\"auto\" will attempt native mode first, then format7_0.\r\n\r\nBy default, ISO800 support is disabled. To enable it, mark the\r\nfield \"use ISO800\" as true.\r\n\r\n### ONLINE PARAMETERS ###\r\n\r\nOnce you start capturing, you should see the realtime video image\r\non the right.\r\nFurthermore, in the data tree, you should be able to go to the\r\n\"Camera Parameters\" node which will then be expandable and show\r\nall of your DCAM parameters.\r\n\r\nYou can adjust all of these parameters in real-time.\r\n\r\nNote that the read-out of these parameters from the camera\r\nonly happens automatically if \"auto refresh params\" in the\r\nCapture Control is set to true. Otherwise, you can use\r\nthe \"re-read params\" \"Refresh\" button to refresh them manually.\r\nFor performance reasons, it might make sense to set auto refresh\r\nto false, so the bus is not being flooded with too much control\r\ndata and has full bandwidth available for the video streaming.\r\n\r\n\r\nStorage of Settings and Parameters \r\n----------------------------------\r\n\r\nWhen you quit the application normally (by closing the window\r\nnot thru Ctrl-C) then all settings and parameters will\r\nautomatically be written to a set of xml files.\r\n\r\nAll settings should be automatically restored during the next\r\nprogram start.\r\n\r\nIn case the files should ever become corrupted, or the\r\nprogram refuses to start completely when parsing the XML files\r\n(this should normally never occur) then simply delete all\r\nXML files and restart. The program should restore its default\r\nsettings.\r\n\r\n","name":"ssl-vision"}